AWSTemplateFormatVersion: '2010-09-09'
Description: 'Serverless URL Shortener Infrastructure - Additional Resources'

Parameters:
  Stage:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]
    Description: The deployment stage
  
  ServiceName:
    Type: String
    Default: url-shortener
    Description: The service name
  
  CustomDomain:
    Type: String
    Default: ''
    Description: Custom domain for the URL shortener (optional)

Conditions:
  HasCustomDomain: !Not [!Equals [!Ref CustomDomain, '']]
  IsProd: !Equals [!Ref Stage, 'prod']

Resources:
  # CloudWatch Log Group for API Gateway
  ApiGatewayLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/apigateway/${ServiceName}-${Stage}'
      RetentionInDays: !If [IsProd, 30, 7]
      Tags:
        - Key: Service
          Value: !Ref ServiceName
        - Key: Stage
          Value: !Ref Stage
        - Key: Author
          Value: "Jessie Borras"

  # CloudWatch Dashboard for monitoring
  MonitoringDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub '${ServiceName}-${Stage}-dashboard'
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/Lambda", "Invocations", "FunctionName", "${ServiceName}-${Stage}-shortenUrl" ],
                  [ "AWS/Lambda", "Invocations", "FunctionName", "${ServiceName}-${Stage}-redirectUrl" ],
                  [ "AWS/Lambda", "Invocations", "FunctionName", "${ServiceName}-${Stage}-getStats" ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Lambda Invocations",
                "period": 300
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/Lambda", "Errors", "FunctionName", "${ServiceName}-${Stage}-shortenUrl" ],
                  [ "AWS/Lambda", "Errors", "FunctionName", "${ServiceName}-${Stage}-redirectUrl" ],
                  [ "AWS/Lambda", "Errors", "FunctionName", "${ServiceName}-${Stage}-getStats" ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Lambda Errors",
                "period": 300
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 6,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/DynamoDB", "ConsumedReadCapacityUnits", "TableName", "${ServiceName}-${Stage}-urls" ],
                  [ "AWS/DynamoDB", "ConsumedWriteCapacityUnits", "TableName", "${ServiceName}-${Stage}-urls" ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "DynamoDB Capacity",
                "period": 300
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 6,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/ApiGateway", "Count", "ApiName", "${ServiceName}-${Stage}" ],
                  [ "AWS/ApiGateway", "4XXError", "ApiName", "${ServiceName}-${Stage}" ],
                  [ "AWS/ApiGateway", "5XXError", "ApiName", "${ServiceName}-${Stage}" ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "API Gateway Metrics",
                "period": 300
              }
            }
          ]
        }

  # SNS Topic for alerts
  AlertsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub '${ServiceName}-${Stage}-alerts'
      DisplayName: !Sub '${ServiceName} ${Stage} Alerts'
      Tags:
        - Key: Service
          Value: !Ref ServiceName
        - Key: Stage
          Value: !Ref Stage
        - Key: Author
          Value: "Jessie Borras"

  # CloudWatch Alarms
  LambdaErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${ServiceName}-${Stage}-lambda-errors'
      AlarmDescription: 'Lambda function errors'
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 2
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 300
      Statistic: Sum
      Threshold: 5
      ActionsEnabled: !If [IsProd, true, false]
      AlarmActions:
        - !If [IsProd, !Ref AlertsTopic, !Ref 'AWS::NoValue']
      Dimensions:
        - Name: FunctionName
          Value: !Sub '${ServiceName}-${Stage}-shortenUrl'
      Tags:
        - Key: Service
          Value: !Ref ServiceName
        - Key: Stage
          Value: !Ref Stage

  DynamoDBThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${ServiceName}-${Stage}-dynamodb-throttles'
      AlarmDescription: 'DynamoDB throttling events'
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 2
      MetricName: ThrottledRequests
      Namespace: AWS/DynamoDB
      Period: 300
      Statistic: Sum
      Threshold: 0
      ActionsEnabled: !If [IsProd, true, false]
      AlarmActions:
        - !If [IsProd, !Ref AlertsTopic, !Ref 'AWS::NoValue']
      Dimensions:
        - Name: TableName
          Value: !Sub '${ServiceName}-${Stage}-urls'
      Tags:
        - Key: Service
          Value: !Ref ServiceName
        - Key: Stage
          Value: !Ref Stage

  # WAF Web ACL for API Gateway (production only)
  WebACL:
    Type: AWS::WAFv2::WebACL
    Condition: IsProd
    Properties:
      Name: !Sub '${ServiceName}-${Stage}-webacl'
      Description: 'WAF rules for URL shortener API'
      Scope: REGIONAL
      DefaultAction:
        Allow: {}
      Rules:
        - Name: AWSManagedRulesCommonRuleSet
          Priority: 1
          OverrideAction:
            None: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: CommonRuleSetMetric
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesCommonRuleSet
        - Name: RateLimitRule
          Priority: 2
          Action:
            Block: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: RateLimitMetric
          Statement:
            RateBasedStatement:
              Limit: 2000
              AggregateKeyType: IP
      Tags:
        - Key: Service
          Value: !Ref ServiceName
        - Key: Stage
          Value: !Ref Stage
        - Key: Author
          Value: "Jessie Borras"

Outputs:
  LogGroupArn:
    Description: CloudWatch Log Group ARN
    Value: !GetAtt ApiGatewayLogGroup.Arn
    Export:
      Name: !Sub '${ServiceName}-${Stage}-LogGroupArn'
  
  DashboardURL:
    Description: CloudWatch Dashboard URL
    Value: !Sub 'https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=${ServiceName}-${Stage}-dashboard'
    Export:
      Name: !Sub '${ServiceName}-${Stage}-DashboardURL'
  
  AlertsTopicArn:
    Description: SNS Topic ARN for alerts
    Value: !Ref AlertsTopic
    Export:
      Name: !Sub '${ServiceName}-${Stage}-AlertsTopicArn'
  
  WebACLArn:
    Condition: IsProd
    Description: WAF Web ACL ARN
    Value: !GetAtt WebACL.Arn
    Export:
      Name: !Sub '${ServiceName}-${Stage}-WebACLArn'